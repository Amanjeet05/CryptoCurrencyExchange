{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Amanjeet Sahay\\\\Desktop\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Amanjeet Sahay\\\\Desktop\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nimport { web3Loaded, web3AccountLoaded, tokenLoaded, exchangeLoaded, cancelledOrdersLoaded, filledOrdersLoaded, allOrdersLoaded, orderCancelling, orderCancelled, orderFilling, orderFilled, etherBalanceLoaded, tokenBalanceLoaded, exchangeEtherBalanceLoaded, exchangeTokenBalanceLoaded, balancesLoaded, balancesLoading } from './actions';\nimport Token from '../abis/Token.json';\nimport Exchange from '../abis/Exchange.json';\nimport { ETHER_ADDRESS } from '../helpers';\nexport var loadWeb3 = function loadWeb3(dispatch) {\n  var web3 = new Web3(Web3.givenProvider || 'http://localhost:7545');\n  dispatch(web3Loaded(web3));\n  return web3;\n};\nexport var loadAccount =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(web3, dispatch) {\n    var accounts, account;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return web3.eth.getAccounts();\n\n          case 2:\n            accounts = _context.sent;\n            account = accounts[0];\n            dispatch(web3AccountLoaded(account));\n            return _context.abrupt(\"return\", account);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadAccount(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var loadToken =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(web3, networkId, dispatch) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            token = web3.eth.Contract(Token.abi, Token.networks[networkId].address);\n            dispatch(tokenLoaded(token));\n            return _context2.abrupt(\"return\", token);\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log('Contract not deployed to the current network. Please select another network with Metamask.');\n            return _context2.abrupt(\"return\", null);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 6]]);\n  }));\n\n  return function loadToken(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var loadExchange =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(web3, networkId, dispatch) {\n    var exchange;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            exchange = web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address);\n            dispatch(exchangeLoaded(exchange));\n            return _context3.abrupt(\"return\", exchange);\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log('Contract not deployed to the current network. Please select another network with Metamask.');\n            return _context3.abrupt(\"return\", null);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 6]]);\n  }));\n\n  return function loadExchange(_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var loadAllOrders =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(exchange, dispatch) {\n    var cancelStream, cancelledOrders, tradeStream, filledOrders, orderStream, allOrders;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return exchange.getPastEvents('Cancel', {\n              fromBlock: 0,\n              toBlock: 'latest'\n            });\n\n          case 2:\n            cancelStream = _context4.sent;\n            // Format cancelled orders\n            cancelledOrders = cancelStream.map(function (event) {\n              return event.returnValues;\n            }); // Add cancelled orders to the redux store\n\n            dispatch(cancelledOrdersLoaded(cancelledOrders)); // Fetch filled orders with the \"Trade\" event stream\n\n            _context4.next = 7;\n            return exchange.getPastEvents('Trade', {\n              fromBlock: 0,\n              toBlock: 'latest'\n            });\n\n          case 7:\n            tradeStream = _context4.sent;\n            // Format filled orders\n            filledOrders = tradeStream.map(function (event) {\n              return event.returnValues;\n            }); // Add cancelled orders to the redux store\n\n            dispatch(filledOrdersLoaded(filledOrders)); // Load order stream\n\n            _context4.next = 12;\n            return exchange.getPastEvents('Order', {\n              fromBlock: 0,\n              toBlock: 'latest'\n            });\n\n          case 12:\n            orderStream = _context4.sent;\n            // Format order stream\n            allOrders = orderStream.map(function (event) {\n              return event.returnValues;\n            }); // Add open orders to the redux store\n\n            dispatch(allOrdersLoaded(allOrders));\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function loadAllOrders(_x9, _x10) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var subscribeToEvents =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(exchange, dispatch) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            exchange.events.Cancel({}, function (error, event) {\n              dispatch(orderCancelled(event.returnValues));\n            });\n            exchange.events.Trade({}, function (error, event) {\n              dispatch(orderFilled(event.returnValues));\n            });\n            exchange.events.Deposit({}, function (error, event) {\n              dispatch(balancesLoaded());\n            });\n            exchange.events.Withdraw({}, function (error, event) {\n              dispatch(balancesLoaded());\n            });\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function subscribeToEvents(_x11, _x12) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var cancelOrder = function cancelOrder(dispatch, exchange, order, account) {\n  exchange.methods.cancelOrder(order.id).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    dispatch(orderCancelling());\n  }).on('error', function (error) {\n    console.log(error);\n    window.alert('There was an error!');\n  });\n};\nexport var fillOrder = function fillOrder(dispatch, exchange, order, account) {\n  exchange.methods.fillOrder(order.id).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    dispatch(orderFilling());\n  }).on('error', function (error) {\n    console.log(error);\n    window.alert('There was an error!');\n  });\n};\nexport var loadBalances =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(dispatch, web3, exchange, token, account) {\n    var etherBalance, tokenBalance, exchangeEtherBalance, exchangeTokenBalance;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return web3.eth.getBalance(account);\n\n          case 2:\n            etherBalance = _context6.sent;\n            dispatch(etherBalanceLoaded(etherBalance)); // Token balance in wallet\n\n            _context6.next = 6;\n            return token.methods.balanceOf(account).call();\n\n          case 6:\n            tokenBalance = _context6.sent;\n            dispatch(tokenBalanceLoaded(tokenBalance)); // Ether balance in exchange\n\n            _context6.next = 10;\n            return exchange.methods.balanceOf(ETHER_ADDRESS, account).call();\n\n          case 10:\n            exchangeEtherBalance = _context6.sent;\n            dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance)); // Token balance in exchange\n\n            _context6.next = 14;\n            return exchange.methods.balanceOf(token.options.address, account).call();\n\n          case 14:\n            exchangeTokenBalance = _context6.sent;\n            dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance)); // Trigger all balances loaded\n\n            dispatch(balancesLoaded());\n\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function loadBalances(_x13, _x14, _x15, _x16, _x17) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var depositEther = function depositEther(dispatch, exchange, web3, amount, account) {\n  exchange.methods.depositEther.send({\n    from: account,\n    value: web3.utils.toWei(amount, 'ether')\n  }).on('transactionHash', function (hash) {\n    dispatch(balancesLoading());\n  }).on('error', function (error) {\n    console.error(error);\n    window.alert(\"There was an error!\");\n  });\n};\nexport var withdrawEther = function withdrawEther(dispatch, exchange, web3, amount, account) {\n  exchange.methods.withdrawEther(web3.utils.toWei(amount, 'ether')).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    dispatch(balancesLoading());\n  }).on('error', function (error) {\n    console.error(error);\n    window.alert(\"There was an error!\");\n  });\n};\nexport var depositToken = function depositToken(dispatch, exchange, web3, token, amount, account) {\n  amount = web3.utils.toWei(amount, 'ether');\n  token.methods.approve(exchange.options.address, amount).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    exchange.methods.depositToken(token.options.address, amount).send({\n      from: account\n    }).on('transactionHash', function (hash) {\n      dispatch(balancesLoading());\n    }).on('error', function (error) {\n      console.error(error);\n      window.alert(\"There was an error!\");\n    });\n  });\n};\nexport var withdrawToken = function withdrawToken(dispatch, exchange, web3, token, amount, account) {\n  exchange.methods.withdrawToken(token.options.address, web3.utils.toWei(amount, 'ether')).send({\n    from: account\n  }).on('transactionHash', function (hash) {\n    dispatch(balancesLoading());\n  }).on('error', function (error) {\n    console.error(error);\n    window.alert(\"There was an error!\");\n  });\n};","map":{"version":3,"sources":["C:\\Users\\Amanjeet Sahay\\Desktop\\blockchain-developer-bootcamp\\src\\store\\interactions.js"],"names":["Web3","web3Loaded","web3AccountLoaded","tokenLoaded","exchangeLoaded","cancelledOrdersLoaded","filledOrdersLoaded","allOrdersLoaded","orderCancelling","orderCancelled","orderFilling","orderFilled","etherBalanceLoaded","tokenBalanceLoaded","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","balancesLoaded","balancesLoading","Token","Exchange","ETHER_ADDRESS","loadWeb3","dispatch","web3","givenProvider","loadAccount","eth","getAccounts","accounts","account","loadToken","networkId","token","Contract","abi","networks","address","console","log","loadExchange","exchange","loadAllOrders","getPastEvents","fromBlock","toBlock","cancelStream","cancelledOrders","map","event","returnValues","tradeStream","filledOrders","orderStream","allOrders","subscribeToEvents","events","Cancel","error","Trade","Deposit","Withdraw","cancelOrder","order","methods","id","send","from","on","hash","window","alert","fillOrder","loadBalances","getBalance","etherBalance","balanceOf","call","tokenBalance","exchangeEtherBalance","options","exchangeTokenBalance","depositEther","amount","value","utils","toWei","withdrawEther","depositToken","approve","withdrawToken"],"mappings":"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","sourcesContent":["import Web3 from 'web3'\nimport {\n  web3Loaded,\n  web3AccountLoaded,\n  tokenLoaded,\n  exchangeLoaded,\n  cancelledOrdersLoaded,\n  filledOrdersLoaded,\n  allOrdersLoaded,\n  orderCancelling,\n  orderCancelled,\n  orderFilling,\n  orderFilled,\n  etherBalanceLoaded,\n  tokenBalanceLoaded,\n  exchangeEtherBalanceLoaded,\n  exchangeTokenBalanceLoaded,\n  balancesLoaded,\n  balancesLoading\n} from './actions'\nimport Token from '../abis/Token.json'\nimport Exchange from '../abis/Exchange.json'\nimport { ETHER_ADDRESS } from '../helpers'\n\nexport const loadWeb3 = (dispatch) => {\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:7545')\n  dispatch(web3Loaded(web3))\n  return web3\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n  const accounts = await web3.eth.getAccounts()\n  const account = accounts[0]\n  dispatch(web3AccountLoaded(account))\n  return account\n}\n\nexport const loadToken = async (web3, networkId, dispatch) => {\n  try {\n    const token = web3.eth.Contract(Token.abi, Token.networks[networkId].address)\n    dispatch(tokenLoaded(token))\n    return token\n  } catch (error) {\n    console.log('Contract not deployed to the current network. Please select another network with Metamask.')\n    return null\n  }\n}\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n  try {\n    const exchange = web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address)\n    dispatch(exchangeLoaded(exchange))\n    return exchange\n  } catch (error) {\n    console.log('Contract not deployed to the current network. Please select another network with Metamask.')\n    return null\n  }\n}\n\nexport const loadAllOrders = async (exchange, dispatch) => {\n  // Fetch cancelled orders with the \"Cancel\" event stream\n  const cancelStream = await exchange.getPastEvents('Cancel', { fromBlock: 0, toBlock: 'latest' })\n  // Format cancelled orders\n  const cancelledOrders = cancelStream.map((event) => event.returnValues)\n  // Add cancelled orders to the redux store\n  dispatch(cancelledOrdersLoaded(cancelledOrders))\n\n  // Fetch filled orders with the \"Trade\" event stream\n  const tradeStream = await exchange.getPastEvents('Trade', { fromBlock: 0, toBlock: 'latest' })\n  // Format filled orders\n  const filledOrders = tradeStream.map((event) => event.returnValues)\n  // Add cancelled orders to the redux store\n  dispatch(filledOrdersLoaded(filledOrders))\n\n  // Load order stream\n  const orderStream = await exchange.getPastEvents('Order', { fromBlock: 0,  toBlock: 'latest' })\n  // Format order stream\n  const allOrders = orderStream.map((event) => event.returnValues)\n  // Add open orders to the redux store\n  dispatch(allOrdersLoaded(allOrders))\n}\n\nexport const subscribeToEvents = async (exchange, dispatch) => {\n  exchange.events.Cancel({}, (error, event) => {\n    dispatch(orderCancelled(event.returnValues))\n  })\n\n  exchange.events.Trade({}, (error, event) => {\n    dispatch(orderFilled(event.returnValues))\n  })\n\n  exchange.events.Deposit({}, (error, event) => {\n    dispatch(balancesLoaded())\n  })\n\n  exchange.events.Withdraw({}, (error, event) => {\n    dispatch(balancesLoaded())\n  })\n}\n\nexport const cancelOrder = (dispatch, exchange, order, account) => {\n  exchange.methods.cancelOrder(order.id).send({ from: account })\n  .on('transactionHash', (hash) => {\n     dispatch(orderCancelling())\n  })\n  .on('error', (error) => {\n    console.log(error)\n    window.alert('There was an error!')\n  })\n}\n\nexport const fillOrder = (dispatch, exchange, order, account) => {\n  exchange.methods.fillOrder(order.id).send({ from: account })\n  .on('transactionHash', (hash) => {\n     dispatch(orderFilling())\n  })\n  .on('error', (error) => {\n    console.log(error)\n    window.alert('There was an error!')\n  })\n}\n\nexport const loadBalances = async (dispatch, web3, exchange, token, account) => {\n  // Ether balance in wallet\n  const etherBalance = await web3.eth.getBalance(account)\n  dispatch(etherBalanceLoaded(etherBalance))\n\n  // Token balance in wallet\n  const tokenBalance = await token.methods.balanceOf(account).call()\n  dispatch(tokenBalanceLoaded(tokenBalance))\n\n  // Ether balance in exchange\n  const exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call()\n  dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance))\n\n  // Token balance in exchange\n  const exchangeTokenBalance = await exchange.methods.balanceOf(token.options.address, account).call()\n  dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance))\n\n  // Trigger all balances loaded\n  dispatch(balancesLoaded())\n}\n\nexport const depositEther = (dispatch, exchange, web3, amount, account) => {\n  exchange.methods.depositEther.send({ from: account,  value: web3.utils.toWei(amount, 'ether') })\n  .on('transactionHash', (hash) => {\n    dispatch(balancesLoading())\n  })\n  .on('error',(error) => {\n    console.error(error)\n    window.alert(`There was an error!`)\n  })\n}\n\nexport const withdrawEther = (dispatch, exchange, web3, amount, account) => {\n  exchange.methods.withdrawEther(web3.utils.toWei(amount, 'ether')).send({ from: account })\n  .on('transactionHash', (hash) => {\n    dispatch(balancesLoading())\n  })\n  .on('error',(error) => {\n    console.error(error)\n    window.alert(`There was an error!`)\n  })\n}\n\nexport const depositToken = (dispatch, exchange, web3, token, amount, account) => {\n  amount = web3.utils.toWei(amount, 'ether')\n\n  token.methods.approve(exchange.options.address, amount).send({ from: account })\n  .on('transactionHash', (hash) => {\n    exchange.methods.depositToken(token.options.address, amount).send({ from: account })\n    .on('transactionHash', (hash) => {\n      dispatch(balancesLoading())\n    })\n    .on('error',(error) => {\n      console.error(error)\n      window.alert(`There was an error!`)\n    })\n  })\n}\n\nexport const withdrawToken = (dispatch, exchange, web3, token, amount, account) => {\n  exchange.methods.withdrawToken(token.options.address, web3.utils.toWei(amount, 'ether')).send({ from: account })\n  .on('transactionHash', (hash) => {\n    dispatch(balancesLoading())\n  })\n  .on('error',(error) => {\n    console.error(error)\n    window.alert(`There was an error!`)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}