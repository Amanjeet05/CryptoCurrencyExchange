{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Amanjeet Sahay\\\\Desktop\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Amanjeet Sahay\\\\Desktop\\\\blockchain-developer-bootcamp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\n\nfunction web3() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return _objectSpread({}, state, {\n        connection: action.connection\n      });\n\n    case 'WEB3_ACCOUNT_LOADED':\n      return _objectSpread({}, state, {\n        account: action.account\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction token() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return _objectSpread({}, state, {\n        loaded: true,\n        contract: action.contract\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction exchange() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var index, data;\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return _objectSpread({}, state, {\n        loaded: true,\n        contract: action.contract\n      });\n\n    case 'CANCELLED_ORDERS_LOADED':\n      return _objectSpread({}, state, {\n        cancelledOrders: {\n          loaded: true,\n          data: action.cancelledOrders\n        }\n      });\n\n    case 'FILLED_ORDERS_LOADED':\n      return _objectSpread({}, state, {\n        filledOrders: {\n          loaded: true,\n          data: action.filledOrders\n        }\n      });\n\n    case 'ALL_ORDERS_LOADED':\n      return _objectSpread({}, state, {\n        allOrders: {\n          loaded: true,\n          data: action.allOrders\n        }\n      });\n\n    case 'ORDER_CANCELLING':\n      return _objectSpread({}, state, {\n        orderCancelling: true\n      });\n\n    case 'ORDER_CANCELLED':\n      return _objectSpread({}, state, {\n        orderCancelling: false,\n        cancelledOrders: _objectSpread({}, state.cancelledOrders, {\n          data: [].concat(_toConsumableArray(state.cancelledOrders.data), [action.order])\n        })\n      });\n\n    case 'ORDER_FILLED':\n      // Prevent duplicate orders\n      index = state.filledOrders.data.findIndex(function (order) {\n        return order.id === action.order.id;\n      });\n\n      if (index === -1) {\n        data = [].concat(_toConsumableArray(state.filledOrders.data), [action.order]);\n      } else {\n        data = state.filledOrders.data;\n      }\n\n      return _objectSpread({}, state, {\n        orderFilling: false,\n        filledOrders: _objectSpread({}, state.filledOrders, {\n          data: data\n        })\n      });\n\n    case 'ORDER_FILLING':\n      return _objectSpread({}, state, {\n        orderFilling: true\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar rootReducer = combineReducers({\n  web3: web3,\n  token: token,\n  exchange: exchange\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:\\Users\\Amanjeet Sahay\\Desktop\\blockchain-developer-bootcamp\\src\\store\\reducers.js"],"names":["combineReducers","web3","state","action","type","connection","account","token","loaded","contract","exchange","index","data","cancelledOrders","filledOrders","allOrders","orderCancelling","order","findIndex","id","orderFilling","rootReducer"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nfunction web3(state = {}, action) {\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return { ...state,  connection: action.connection }\n    case 'WEB3_ACCOUNT_LOADED':\n      return { ...state, account: action.account }\n    default:\n      return state\n  }\n}\n\nfunction token(state = {}, action) {\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    default:\n      return state\n  }\n}\n\nfunction exchange(state = {}, action) {\n  let index, data\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    case 'CANCELLED_ORDERS_LOADED':\n      return { ...state, cancelledOrders: { loaded: true, data: action.cancelledOrders } }\n    case 'FILLED_ORDERS_LOADED':\n      return { ...state, filledOrders: { loaded: true, data: action.filledOrders } }\n    case 'ALL_ORDERS_LOADED':\n      return { ...state, allOrders: { loaded: true, data: action.allOrders } }\n    case 'ORDER_CANCELLING':\n      return { ...state, orderCancelling: true }\n    case 'ORDER_CANCELLED':\n      return {\n        ...state,\n        orderCancelling: false,\n        cancelledOrders: {\n          ...state.cancelledOrders,\n          data: [\n            ...state.cancelledOrders.data,\n            action.order\n          ]\n        }\n      }\n    case 'ORDER_FILLED':\n      // Prevent duplicate orders\n      index = state.filledOrders.data.findIndex(order => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [...state.filledOrders.data, action.order]\n      } else {\n        data = state.filledOrders.data\n      }\n\n      return {\n        ...state,\n        orderFilling: false,\n        filledOrders: {\n          ...state.filledOrders,\n          data\n        }\n      }\n\n    case 'ORDER_FILLING':\n      return { ...state, orderFilling: true }\n\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  web3,\n  token,\n  exchange\n})\n\nexport default rootReducer\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}